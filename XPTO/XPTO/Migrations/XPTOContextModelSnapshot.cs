// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XPTO.Contexts;

namespace XPTO.Migrations
{
    [DbContext(typeof(XPTOContext))]
    partial class XPTOContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XPTO.Domains.Anuncio", b =>
                {
                    b.Property<int>("idAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<byte>("idUsuario")
                        .HasColumnType("tinyint");

                    b.Property<string>("imagem")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<double>("preco")
                        .HasColumnType("float");

                    b.HasKey("idAnuncio");

                    b.ToTable("Anuncio");

                    b.HasData(
                        new
                        {
                            idAnuncio = 1,
                            descricao = "Em boa condição",
                            idUsuario = (byte)1,
                            imagem = "",
                            nome = "playstation 2",
                            preco = 500.0
                        });
                });

            modelBuilder.Entity("XPTO.Domains.Interesse", b =>
                {
                    b.Property<int>("idInteresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("idAnuncio")
                        .HasColumnType("tinyint");

                    b.Property<byte>("idUsuario")
                        .HasColumnType("tinyint");

                    b.HasKey("idInteresse");

                    b.ToTable("Interesse");

                    b.HasData(
                        new
                        {
                            idInteresse = 1,
                            idAnuncio = (byte)1,
                            idUsuario = (byte)2
                        });
                });

            modelBuilder.Entity("XPTO.Domains.TipoUsuario", b =>
                {
                    b.Property<int>("idTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("idTipoUsuario");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new
                        {
                            idTipoUsuario = 1,
                            titulo = "Administrador"
                        },
                        new
                        {
                            idTipoUsuario = 2,
                            titulo = "Cliente"
                        });
                });

            modelBuilder.Entity("XPTO.Domains.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<byte>("idTipoUsuario")
                        .HasColumnType("tinyint");

                    b.Property<string>("imagem")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<long>("telefone")
                        .HasMaxLength(11)
                        .HasColumnType("bigint");

                    b.HasKey("idUsuario");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            idUsuario = 1,
                            cidade = "São Paulo",
                            email = "admin@admin.com",
                            estado = "São Paulo",
                            idTipoUsuario = (byte)1,
                            imagem = "",
                            nome = "admin",
                            senha = "admin1234",
                            telefone = 11912345678L
                        },
                        new
                        {
                            idUsuario = 2,
                            cidade = "São Paulo",
                            email = "cliente@cliente.com",
                            estado = "São Paulo",
                            idTipoUsuario = (byte)2,
                            imagem = "",
                            nome = "cliente",
                            senha = "cliente1234",
                            telefone = 11912345678L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
